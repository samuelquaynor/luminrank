/**
 * Fixture Models - Phase 3
 * Represents scheduled matches generated by round-robin algorithm
 */

export enum FixtureStatus {
  SCHEDULED = 'scheduled',
  COMPLETED = 'completed',
  OVERDUE = 'overdue',
  CANCELLED = 'cancelled',
  FORFEITED = 'forfeited'
}

export interface Fixture {
  id: string;
  league_id: string;
  season_id: string | null;
  
  // Participants
  home_player_id: string;
  away_player_id: string;
  
  // Scheduling
  round_number: number;
  scheduled_date: string;
  submission_deadline: string;
  
  // Status and result
  status: FixtureStatus;
  match_id: string | null;
  winner_id: string | null;
  
  // Timestamps
  created_at: string;
  updated_at: string;
}

export interface FixtureWithDetails extends Fixture {
  home_player_name: string;
  away_player_name: string;
}

export interface CreateFixtureRequest {
  league_id: string;
  season_id?: string;
  home_player_id: string;
  away_player_id: string;
  round_number: number;
  scheduled_date: string;
  submission_deadline: string;
}

export interface GenerateFixturesRequest {
  league_id: string;
  season_id?: string;
  start_date: string;
  match_frequency_days: number;
  include_return_fixtures: boolean;
  submission_window_hours: number;
}

export interface FixtureGenerationResult {
  fixtures: Fixture[];
  total_rounds: number;
  total_fixtures: number;
}

